# .github/workflows/deploy.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_IMAGE: berkegulec93/cloud-native-devops
  NODE_VERSION: '18'

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd app
          npm ci

      - name: Run tests
        run: |
          cd app
          npm test || echo "No tests configured"

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version
        id: version
        run: echo "VERSION=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.VERSION }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:latest
          cache-to: type=inline

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}"| base64 -d > ~/.ssh/devops-pipeline
          chmod 600 ~/.ssh/devops-pipeline
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/devops-pipeline ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # Pull latest image
            docker pull ${{ env.DOCKER_IMAGE }}:latest
            
            # Stop and remove old container
            docker stop app || true
            docker rm app || true
            
            # Run new container
            docker run -d \
              --name app \
              --restart unless-stopped \
              -p 3000:3000 \
              -e NODE_ENV=production \
              ${{ env.DOCKER_IMAGE }}:latest
            
            # Check health
            sleep 5
            curl -f http://localhost:3000/health || exit 1
            
            echo "Deployment successful!"
          EOF

      - name: Deployment notification
        if: success()
        run: |
          echo "✅ Deployment successful to http://${{ secrets.EC2_HOST }}:3000"

      - name: Deployment failure notification
        if: failure()
        run: |
          echo "❌ Deployment failed"
